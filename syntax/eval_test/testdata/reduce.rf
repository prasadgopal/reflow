val test = make("$/test")
func add(i, j int) = i + j

val TestReduce = test.All([
		reduce(func(i, j int) => i + j, [1, 2, delay(3)]) == 6,
		reduce(func(i, j int) => i - j, [3, 2, delay(1)]) == 0,
		reduce(func(i, j string) => i + j, [delay("ab"), "raca", "dabra"]) == "abracadabra",
		reduce(func (i, j float) => i + j, [1.0, 2.1, 3.2]) == 6.3,
		reduce(add, [1, 2, 3]) == 6,
		reduce(func(i, j {a int}) => {a: i.a + j.a}, [{a: 1}, {a: 4}, {a: 9}]) == {a: 14},
		reduce(func(i, j {a int}) => {a: i.a + j.a}, [{a: 1, c:2}, {a: 4, c: 4}, {a: 9, b: 4}]) == {a: 14},
		reduce(func(i {a, c int}, j {a, c int}) => {a: i.a + j.a, c: i.c}, [{a: 1, c:2}, {a: 4, c: 4}, {a: 9, b: 4, c:2}]) == {a: 14, c: 2},
])
